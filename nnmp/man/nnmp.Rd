% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nnmp-package.R, R/nnmp.R
\docType{package}
\name{nnmp}
\alias{nnmp}
\title{Function for fitting a nearest-neighbor mixture process model}
\usage{
nnmp(
  response,
  covars = NULL,
  coords,
  neighbor_size = 10,
  marg_family,
  cop_family = NULL,
  sp_func = NULL,
  priors = NULL,
  starting = NULL,
  tuning = NULL,
  ord = NULL,
  mcmc_settings,
  weights_samples = FALSE,
  verbose = TRUE,
  neighbor_info = FALSE,
  model_diag = NULL,
  par_label = NULL
)
}
\arguments{
\item{response}{a vector of complete geostatistical data of length \eqn{n}.}

\item{covars}{an \eqn{n \times p} matrix of covariates. If an intercept is desired, the first 
column of the matrix should be a vector of ones.}

\item{coords}{an \eqn{n \times 2} matrix of the observation coordinates, e.g., longitude and latitude.}

\item{neighbor_size}{neighborhood size (number of nearest neighbors).}

\item{marg_family}{a quoted keyword that specifies the family of distributions for the marginal.
Supported keywords are \code{"beta"}, \code{"gamma"}, \code{"gaussian"}, and \code{"sn"}.}

\item{cop_family}{a quoted keyword that specifies the family of copulas for the bivariate distributions
that define the first-order conditionals. 
Supported keywords are \code{"gaussian"}, \code{"gumbel"}, and \code{"clayton"}.}

\item{sp_func}{a function that introduces spatial dependence for the mixture components. 
The default function is an exponential correlation function now (or its transformation for 
Gumbel and Clayton copulas); users can skip this argument.}

\item{priors}{a list of priors. Each element of the list corresponds to a combination of an unknown parameter 
and its prior distribution; for example, "\code{phi_invgamma}" and "\code{zeta_invgamma}".}

\item{starting}{a list of starting values. Each element of the list corresponds to an unknown parameter.}

\item{tuning}{a list of tuning parameters. Each element of the list corresponds to an unknown parameter.
The value portion of each element defines the variance of the random walk Metropolis sampler 
proposal distribution for the unknown parameter.}

\item{ord}{an index vector of length \eqn{n} to order the data. The vector defines an ordering based on which
nearest neighbors are searched. If the argument is not specified, the default ordering is random ordering.}

\item{mcmc_settings}{a list of Markov chain Monte Carlo (MCMC) simulation parameters. 
\code{n_iter}: number of iterations; \code{n_burn}: number of burn-in samples;
\code{n_thin}: thinning degree. If \code{verbose = TRUE},
\code{n_report} defines the interval to report MCMC progress and Metropolis acceptance rates.}

\item{weights_samples}{logical; if true, samples of the mixture weights are returned.
This argument is fixed to be FALSE now; users can skip this argument.}

\item{verbose}{logical; if true, model specification, MCMC progress, and Metropolis acceptance rates
are printed to the screen.}

\item{neighbor_info}{logical; if true, a list that comprises each location's neighborhood information is returned.}

\item{model_diag}{a list of quoted kyewords that specify measurements of model fit to calculate.
.            Supported key words are \code{dic} and \code{pplc}. The argument only supports the GNNMP now.}

\item{par_label}{a vector of numeric values of length \eqn{n}, ranging from 1 to K, 
where k corresponds to the k-th partition, for k = 1, ..., K.
The argument is only specified for fitting the extended skew-Gaussian NNMP.}
}
\value{
An object of class \code{nnmp}. The return object is a list that comprises:

\tabular{ll}{

\code{post_samples} \tab a list of posterior samples. Each element of the list corresponds to an unknown parameter. \cr
\tab \cr
\code{orig_data} \tab a list that consists of input data 
        (\code{response}, \code{covars}, and \code{coords}). \cr
\tab \cr
\code{ord_data} \tab a list that consists of ordered input data
        (\code{ord:} index vector for ordering; 
         \code{yy_ord}: ordered responses;
         \code{XX_ord}: ordered covariates (if \code{covars = NULL}, \code{XX_ord = NULL});
         \code{coords_ord}: ordered coordinates). \cr
\tab \cr
\code{mod_spec}: \tab a list that consists of model specifications 
        (\code{neigbhor_size}: neighborhood size; 
         \code{marg_family}: family of marginal distributions;
         \code{cop_family}: copula family for the bivariate distributions that define the first-order conditionals;
         \code{sp_func}: function that introduces spatial dependence;
         \code{priors}: priors for unknown parameters). \cr
\tab \cr
\code{mcmc_params}: \tab a list that consists of unknown parameters' starting values and Metropolis sampler proposal distribution variances
        used in the MCMC simulation (
        \code{starting}: starting values;
        \code{tuning}: Metropolis sampler proposal distribution variances). \cr
\tab \cr
\code{mh_data}: \tab a list that consists of each unknown parameter's Metropolis 
                     sampler acceptance and rejection indicators.\cr
\tab \cr
\code{runtime}: \tab running time for MCMC simulation calculated using \code{system.time}.
        Running time for searching nearest neighbors is not included. \cr
\tab \cr
\code{neighbor_info}: \tab returned if \code{neighbor_info = TRUE}. See above the \code{neighbor_info} argument description.\cr
\tab \cr
\code{par_label}: \tab returned if \code{par_label = TRUE}. See above the \code{par_label} argument description.\cr
\tab \cr
\code{mod_diag}: \tab returned if \code{mod_diag = TRUE}. See above the \code{mod_diag} argument description.

}
}
\description{
This function fits a nearest-neighbor mixture process (NNMP) model with continuous 
marginal distributions using Markov Chain Monte Carlo simulations.
}
\references{
Zheng, X., Kottas, A., and Sans√≥, B. 
"Nearest-neighbor mixture models for non-Gaussian spatial processes". 
Bayesian Anal. 18 (4) 1191 - 1222, December 2023.
DOI: \href{https://doi.org/10.1214/23-BA1405}{https://doi.org/10.1214/23-BA1405}.
}
\author{
Xiaotian Zheng \email{xiaotianzheng42@gmail.com}
}
